"""
7.11 Декораторы функций

Подвиг 1. Объявите функцию с именем get_sq, которая вычисляет площадь прямоугольника по двум параметрам:
width и height - ширина и высота прямоугольника. И возвращает результат (сама ничего на экран не выводит).
То есть, функция имеет сигнатуру:

def get_sq(width, height): ...

Определите декоратор func_show для этой функции, который отображает результат на экране в виде строки (без кавычек):
"Площадь прямоугольника: <значение>"
Вызывать функцию и декоратор не нужно, только объявить. Применять декоратор к функции также не нужно.

Sample Input: 8 11
Sample Output: Площадь прямоугольника: 88
"""

width, height = map(int, input().split())


def func_show(func): # Функция декоратор
    def wrapper(*args, **kwargs): # Внутренная функция которая принимает какоето количество агументов,
        # что либо делает вызывает декорируемую функцию, выполнаяет ее и делает еще что либо.
        res = func(*args, **kwargs) # Сторонняя фукнция которая выполняет свою задачу
        print(f"Площадь прямоугольника: {res}") # Задача которая должнам быть выполненая посел выполнения сторонней функции
    return wrapper # Выполняем внутренную функцию


@func_show
def get_sq(width, height):
    res = width * height
    return res


get_sq(width, height)