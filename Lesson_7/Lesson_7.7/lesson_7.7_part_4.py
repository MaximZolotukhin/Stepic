"""
7.7 Рекурсивные функции

Подвиг 4. Вводится натуральное число N. Необходимо с помощью рекурсивной функции fib_rec(N, f=[])
(здесь N - общее количество чисел Фибоначчи; f - начальный список этих чисел)
сформировать последовательность чисел Фибоначчи по правилу: первые два числа равны 1 и 1,
а каждое следующе значение равно сумме двух предыдущих. Пример такой последовательности
для первых 7 чисел: 1, 1, 2, 3, 5, 8, 13, ...

Функция должна возвращать список сформированной последовательности длиной N.
Вызывать функцию не нужно, только объявить.

Sample Input: 7
Sample Output: 1 1 2 3 5 8 13
"""

N = int(input())


def fib_rec(N, f=[1, 1]): # Сразу в список записываем 1, 1 с этих цифр всегда начинается последовательность Фибоначчи
    if len(f) < N: # Выполняем цикл пока пока размер списка не достигнет размера переданного пользователем числа
        f.append(f[-1] + f[-2]) # Добавляем в список сумму значений последнего и предпоследнего индекса
        fib_rec(N, f) # вызываем еще раз функцию передавая
    return f # Возвращаем список


print(*fib_rec(N))

# def fib_rec(N, f=[]):
#     fib1 = fib2 = 1
#     f.append(fib1)
#     f.append(fib1)
#     for i in range(2, N):
#         fib1, fib2 = fib2, fib1 + fib2
#         f.append(fib2)
#     return f
#
# print(fib_rec(N))
