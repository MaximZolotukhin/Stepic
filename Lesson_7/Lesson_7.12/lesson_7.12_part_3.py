"""
7.12 Передача аргументов декораторам

Подвиг 3. Объявите функцию, которая принимает строку на кириллице и преобразовывает ее в латиницу,
используя следующий словарь для замены русских букв на соответствующее латинское написание:

t = {'ё': 'yo', 'а': 'a', 'б': 'b', 'в': 'v', 'г': 'g', 'д': 'd', 'е': 'e', 'ж': 'zh',
     'з': 'z', 'и': 'i', 'й': 'y', 'к': 'k', 'л': 'l', 'м': 'm', 'н': 'n', 'о': 'o', 'п': 'p',
     'р': 'r', 'с': 's', 'т': 't', 'у': 'u', 'ф': 'f', 'х': 'h', 'ц': 'c', 'ч': 'ch', 'ш': 'sh',
     'щ': 'shch', 'ъ': '', 'ы': 'y', 'ь': '', 'э': 'e', 'ю': 'yu', 'я': 'ya'}

Функция должна возвращать преобразованную строку. Замены делать без учета регистра (исходную строку перевести
в нижний регистр - малые буквы).
Определите декоратор с параметром chars и начальным значением " !?", который данные символы преобразует в символ "-" и,
кроме того, все подряд идущие дефисы (например, "--" или "---") приводит к одному дефису.
Полученный результат должен возвращаться в виде строки.
Примените декоратор с аргументом chars="?!:;,. " к функции и вызовите декорированную функцию для введенной строки s:
s = input()
Результат отобразите на экране.

Sample Input: Декораторы - это круто!
Sample Output: dekoratory-eto-kruto-
"""

t = {'ё': 'yo', 'а': 'a', 'б': 'b', 'в': 'v', 'г': 'g', 'д': 'd', 'е': 'e', 'ж': 'zh',
     'з': 'z', 'и': 'i', 'й': 'y', 'к': 'k', 'л': 'l', 'м': 'm', 'н': 'n', 'о': 'o', 'п': 'p',
     'р': 'r', 'с': 's', 'т': 't', 'у': 'u', 'ф': 'f', 'х': 'h', 'ц': 'c', 'ч': 'ch', 'ш': 'sh',
     'щ': 'shch', 'ъ': '', 'ы': 'y', 'ь': '', 'э': 'e', 'ю': 'yu', 'я': 'ya'}

string = input()

def decor_func(chars=" !?"):
    def translite(any_func):
        def wrapper(*args, **kwargs):
            res = any_func(*args, **kwargs)
            result = ''
            for val in res:  # Вытаскиваем один символ из пользовательской строки
                if val in chars:
                    result += '-'
                else:
                    result += val
            result = result.replace("---", "-")
            result = result.replace("--", "-")
            return result
        return wrapper
    return translite


@decor_func(chars="?!:;,. ")
def string_lower(string, t):
    result = ''
    for val in string.lower(): # Вытаскиваем один символ из пользовательской строки
        if val in t:
            for key, value in t.items(): # Сравниваем символ с таблицей кодировки
                if val == key: # Если да то сохраняем символ из таблицы кодировки в строку
                    result += value
        elif  val not in t.keys() and val not in ": ;.,_":
            result += val
        elif val in ": ;.,_": # Если да то заменяем пробел на необходимую строку.
            result += '-'
    return result


print(string_lower(string, t))
