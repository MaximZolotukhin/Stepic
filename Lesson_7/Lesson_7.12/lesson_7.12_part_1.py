"""
7.12 Передача аргументов декораторам

Подвиг 1. Вводится строка целых чисел через пробел. Напишите функцию, которая преобразовывает эту строку
в список чисел и возвращает их сумму.
Определите декоратор для этой функции, который имеет один параметр start - начальное значение суммы.
Примените декоратор со значением start=5 к функции и вызовите декорированную функцию для введенной строки s:

s = input()
Результат отобразите на экране.

Sample Input: 5 6 3 6 -4 6 -1
Sample Output: 26
"""
s = input()

def sum_number(start=0): # Функция для передачи параметра в декоратор
    def dec_sun(func): # Декоратор с приемом функция для декорирования
        def wrapper(*args, **kwargs): # Внутренняя функция которая выполняет условие
            perem = func(s) # Сохраняем данные из декорируемой функции
            result = start + sum(perem) # складываем сумму из списка и стартовую сумму
            wrapper.__name__ = func.__name__
            wrapper.__doc__ = func.__doc__
            return result
        return wrapper
    return dec_sun


@sum_number(start=5) # Декоратор с возможность передачи параметра
def summ_number(s): # функция переводит строку в список
    list_result = [int(val) for val in s.split()]
    return list_result

print(summ_number(s))
