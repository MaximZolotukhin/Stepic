"""
7.12 Передача аргументов декораторам

Подвиг 2. Объявите функцию, которая возвращает переданную ей строку в нижнем регистре (с малыми буквами).
Определите декоратор для этой функции, который имеет один параметр tag, определяющий строку с названием тега
и начальным значением "h1". Этот декоратор должен заключать возвращенную функцией строку в тег tag и возвращать результат.

Пример заключения строки "python" в тег h1: <h1>python</h1>
Примените декоратор со значением tag="div" к функции и вызовите декорированную функцию для введенной строки s:
s = input()

Результат отобразите на экране.

Sample Input: Декораторы - это классно!
Sample Output: <div>декораторы - это классно!</div>
"""

from functools import wraps

string_user = input()

def decpration_func(tag="h1"): # Функция для передачи параметра в декоратор
    def html_teg(any_func): # Декоратор с приемом функция для декорирования
        @wraps(any_func) # Способ сохранения правильного имени функции
        def string(*args, **kwargs): # Внутренняя функция которая выполняет условие
            result = f"<{tag}>{any_func(string_user)}</{tag}>" # Сразу выводим результат
            return result
        return string # Делаем замыкание
    return html_teg


@decpration_func(tag="div")
def string_lower(string_user):
    # Передаем в внешнюю функцию тэг
    string = string_user.lower() # Делаем замыкание
    return string

print(string_lower(string_user))
