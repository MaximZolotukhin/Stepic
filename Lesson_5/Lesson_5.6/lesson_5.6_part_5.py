"""
5.6 Вложенные циклы

Подвиг 5. Вводится двумерный список размерностью 5 х 5 элементов, состоящий из целых чисел (пример ввода см. ниже).
Проверьте, является ли этот двумерный список симметричным относительно главной диагонали. Главная диагональ — та,
которая идёт из левого верхнего угла двумерного массива в правый нижний. Выведите на экран ДА,
если матрица симметрична и НЕТ - в противном случае.

P. S. Для считывания списка целиком в программе уже записаны начальные строчки.
Sample Input:
2 3 4 5 6
3 2 7 8 9
4 7 2 0 4
5 8 0 2 1
6 9 4 1 2

Sample Output: ДА
"""

lst_in = [
    [2, 3, 4, 5, 6],
    [3, 2, 7, 8, 9],
    [4, 7, 2, 0, 4],
    [5, 8, 1, 2, 1],
    [6, 9, 4, 1, 2]
]

# lst_in = [
#     [2, 3, 4, 5, 6],
#     [3, 2, 7, 8, 5],
#     [4, 7, 2, 7, 4],
#     [5, 8, 7, 2, 3],
#     [6, 5, 4, 3, 2]
# ]

"""
Ход проверки идет по цепи
if [0][1] == [2][0]
if [0][2] == [2][0]
if [0][3] == [3][0]
if [0][4] == [4][0]
Вторая итерация внешнего for
if [1][2] == [2][1]
if [1][3] == [3][1]
if [1][4] == [4][1]
Третья итерация внешнего for
if [2][3] == [3][2]
if [2][4] == [4][2]
"""

import sys

# считывание списка из входного потока
# s = sys.stdin.readlines()
# lst_in = [list(map(int, x.strip().split())) for x in s]

# здесь продолжайте программу (используйте список lst_in)

flag = True # Создаю флаг
count = 1 # Счетчик для начала второго индекса

# for index, value in enumerate(lst_in): # Для отрисовки матрицы
#     print(value)
# for index_1, value_1 in enumerate(lst_in):

for index_1 in range(0, len(lst_in)): # Получения первой части индекса (Основной список)
    for index_2 in range(count, len(lst_in)): # Получения второй части индекса (Вложенный список)
        # if lst_in[index_1][index_2] != lst_in[index_2][index_1]: # Сокращенный вариант проверки
        number_1 = lst_in[index_1][index_2] # Сохраняю число из массива стоящее слева
        number_2 = lst_in[index_2][index_1] # Сохраняю число из массива стоящее справа
        if number_1 != number_2: # Проверяю их на неравенство
            flag = False # Если они не равный то условия нашего задания не исполняются и можно выходить из цикла flag = False
            break   # Прерываю работу цикла с помощью break
        else: # Если равны то устанавливаю флаг на True и продолжаю проверку
            flag = True

    if flag == False: # Если Флаг равен False то выхожу из внешнего цикла
        break

if flag: # Если Флаг равен True то печатаю ДА
    print("ДА")
else:   # Если Флаг равен False то печатаю НЕТ
    print("НЕТ")
