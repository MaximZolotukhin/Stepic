"""
6.3 Кортежи (tuple) и их методы
Подвиг 9. Имеется двумерный кортеж, размером 5 x 5 элементов:
t = ((1, 0, 0, 0, 0),
     (0, 1, 0, 0, 0),
     (0, 0, 1, 0, 0),
     (0, 0, 0, 1, 0),
     (0, 0, 0, 0, 1))

Вводится натуральное число N (N < 5). Необходимо на основе кортежа t сформировать новый
аналогичный кортеж t2 размером N x N элементов. Результат вывести на экран в виде таблицы чисел.

Sample Input: 3

Sample Output:
1 0 0
0 1 0
0 0 1
"""

tup_start = ((1, 0, 0, 0, 0),
     (0, 1, 0, 0, 0),
     (0, 0, 1, 0, 0),
     (0, 0, 0, 1, 0),
     (0, 0, 0, 0, 1))

# user_number = int(input()) # Число которое будет формировать размер матрицы
# tup_end = () # Конечный вариант матрицы размером заданным пользователем
# for i in range(user_number): # Перебор значения стартовой матрицы
#      tup_mid = () # Промежуточный результат
#      for j in range(user_number): # Прохожу по внутренней части кортежа
#           tup_mid += tup_start[i][j], # Сохраняю  все данные из стартовой матрице по указанным индексам
#      tup_end += tup_mid, # Передаю полученное значение в конечный вариант матрицы
#      print(*tup_end[i]) # Печатаю полученную строку.


# ----------------------------  Вариант 2 -------------------------------------------------------------
user_number = int(input()) # Число которое будет формировать размер матрице
tup_end = tuple(tup_start[i][0:user_number] for i in range(user_number)) # Справа на лево, в цикле прохожу по элементам кортежа
# до заданного пользователем числа, потом с помощью tup_start[i] выбираю индексы внешних кортежа и прохожу с помощью среза
# по внутренним элементам

for i in range(user_number):
     print(*tup_end[i]) # Печатаю полученную строку.
