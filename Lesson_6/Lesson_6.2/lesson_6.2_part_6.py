"""
6.2 Методы словаря. Перебор его элементов в цикле

Подвиг 6. Вводятся данные в формате:
<день рождения 1> имя_1
<день рождения 2> имя_2
...
<день рождения N> имя_N

Дни рождений и имена могут повторяться. На их основе сформировать словарь и вывести его в формате (см. пример ниже):
день рождения 1: имя1, ..., имяN1
день рождения 2: имя1, ..., имяN2
...
день рождения M: имя1, ..., имяNM

P. S. Для считывания списка целиком в программе уже записаны начальные строчки.

Sample Input:
3 Сергей
5 Николай
4 Елена
7 Владимир
5 Юлия
4 Светлана

Sample Output:
3: Сергей
5: Николай, Юлия
4: Елена, Светлана
7: Владимир
"""

import sys

# считывание списка из входного потока
list_in = [value.split() for value in list(map(str.strip, sys.stdin.readlines()))] # Сразу делаю вложенные списки
# разбиваю по два значения [3, Сергей]
brit_day = {} # Создаю словарь
for key, value in list_in: # Перебираю элементы в полученном списке и вывожу по два за итерацию (значение из вложенных списков)
    if key in brit_day.keys(): # Если ключ уже есть
        # brit_day[key] = [brit_day[key], value] # Добавляю к тому же ключу еще значения
        brit_day[key].append(value) # Добавляю к тому же ключу еще значения
    else:
        brit_day[key] = [value] # Если нет то добавляем ключи и значение в словарь

for key, value in brit_day.items(): # Прохожу по словарю с помощь  .items() извлекаю ключи и значения
    print(f"{key}: {', '.join(value)}") # Вывожу значения, если встречаю два значения в value разбиваю их с помощью
    # ', '.join(value) - разделят значения по заданному условию

#--------------------------------        Не мое решение              --------------------------------------------
res = {}
for i in map(str.strip, open(0).readlines()):
    key, val = i.split() # Разделяем полученные значение на два элемента
    res[key] = res.get(key, []) + [val] # В словарь добавляем ключи и
    # res.get(key, []) + [val] - Ищет ключ и если его не находит то добавляет ключи и знанчени в словарь по умолнчнию знанчени None
    # если находи тогда  + [val] добавляем знанчение к уже имеющемуся ключу.
print('\n'.join(f'{i}: {", ".join(res[i])}' for i in res))
