"""
9.2 Функция-генератор. Оператор yield


Подвиг 1. Вводится натуральное число N. Необходимо определить функцию-генератор с именем get_sum,
которая бы возвращала текущую сумму чисел последовательности длины N в диапазоне целых чисел [1; N]. Например:
- для первого числа 1 сумма равна 1;
- для второго числа 2 сумма равна 1+2 = 3
....
- для N-го числа сумма равна 1+2+...+(N-1)+N
Реализовать функцию-генератор get_sum без использования коллекций. Вызывать ее не нужно, только определить.

Sample Input: 5
Sample Output: 1 3 6 10 15
"""

# ввод значения N (эту переменную не менять)
N = int(input())

# здесь продолжайте программу

def get_sum(N):
    sum = 0 # Число которое будет сохранять сумму
    for val in range(1, N+1): # Цикл где мы получем число от 1 до N+1
        sum += val # Суммирование полученных чисел
        yield sum # Ставим на паузу выплнение цикла и возвращаем полученное число

if __name__ == "__main__":
    val_def = get_sum(N)
    while N >= 0:
        print(*val_def)
        N -= 1
